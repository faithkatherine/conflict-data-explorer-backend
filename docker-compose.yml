version: "3.8"

services:
  # API Service
  api:
    build: .
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=conflict_data
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - conflict-data-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=conflict_data
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - conflict-data-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - conflict-data-network

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - conflict-data-network

  # Frontend (Next.js)
  frontend:
    build: ../cde
    ports:
      - "3003:3003"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:3002
    depends_on:
      - api
    networks:
      - conflict-data-network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  conflict-data-network:
    driver: bridge
